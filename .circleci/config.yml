version: 2.1

workflows:
  build-and-test:
    jobs:
      - provision-runners
      - build-static:
          matrix:
            parameters:
              go_version: ["1.16", "1.17"]
              platform: ["linux"]
          requires:
            - provision-runners
          post-steps:
            - terraform/destroy:
                path: terraform/digitalocean
      - check-cloud:
          requires:
            - build-static-1.16-linux

orbs:
  go: circleci/go@1.7.0
  terraform: circleci/terraform@3.0.0

jobs:
  provision-runners:
    executor: terraform/default
    steps:
      - add_ssh_keys:
          fingerprints: 30:95:d7:ba:f9:0f:10:b2:6b:d9:67:8a:ef:81:a9:89
      - run:
          name: Create .terraformrc file locally
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
      - terraform/apply:
          path: terraform/digitalocean
      - persist_to_workspace:
          root: $HOME
          paths: .terraformrc
  build-static:
    parameters:
      go_version:
        description: Version of Go to use
        type: string
        default: "1.16"
      platform:
        description: The target for the build. Must be one of "linux", "osx", or "windows".
        type: enum
        enum: ["linux", "osx", "windows"]
        default: "linux"
    machine: true
    resource_class: sandboxi/runner0
    environment:
      EXPECT_LINK_INFO: static
    steps:
      - checkout
      - go/install:
          version: << parameters.go_version >>
      - run: go get -u golang.org/x/lint/golint && touch .do_lint
      - run: go mod init github.com/confluentinc/confluent-kafka-go
      - attach_workspace:
          at: $HOME
      - persist_to_workspace:
          root: .
          paths: kafka*
  check-cloud:
    docker:
      - image: cimg/go:1.17
    steps:
      - attach_workspace:
          at: tmp-space
      - run: ls -al tmp-space
  check-runner:
    machine: true
    resource_class: sandboxi/runner0
    steps:
      - attach_workspace:
          at: tmp-space
      - run: ls -al tmp-space
